(this["webpackJsonpfuse-react-app"]=this["webpackJsonpfuse-react-app"]||[]).push([[131],{1647:function(e,t,a){"use strict";var n=a(4),o=a(1),r=a(0),l=(a(3),a(2)),s=a(9),i=a(526),m=r.forwardRef((function(e,t){var a=e.classes,s=e.className,m=e.component,c=void 0===m?"table":m,u=e.padding,p=void 0===u?"default":u,f=e.size,d=void 0===f?"medium":f,g=e.stickyHeader,h=void 0!==g&&g,E=Object(n.a)(e,["classes","className","component","padding","size","stickyHeader"]),b=r.useMemo((function(){return{padding:p,size:d,stickyHeader:h}}),[p,d,h]);return r.createElement(i.a.Provider,{value:b},r.createElement(c,Object(o.a)({role:"table"===c?null:"table",ref:t,className:Object(l.default)(a.root,s,h&&a.stickyHeader)},E)))}));t.a=Object(s.a)((function(e){return{root:{display:"table",width:"100%",borderCollapse:"collapse",borderSpacing:0,"& caption":Object(o.a)({},e.typography.body2,{padding:e.spacing(2),color:e.palette.text.secondary,textAlign:"left",captionSide:"bottom"})},stickyHeader:{borderCollapse:"separate"}}}),{name:"MuiTable"})(m)},1648:function(e,t,a){"use strict";var n=a(1),o=a(4),r=a(0),l=(a(3),a(2)),s=a(9),i=a(299),m={variant:"body"},c=r.forwardRef((function(e,t){var a=e.classes,s=e.className,c=e.component,u=void 0===c?"tbody":c,p=Object(o.a)(e,["classes","className","component"]);return r.createElement(i.a.Provider,{value:m},r.createElement(u,Object(n.a)({className:Object(l.default)(a.root,s),ref:t,role:"tbody"===u?null:"rowgroup"},p)))}));t.a=Object(s.a)({root:{display:"table-row-group"}},{name:"MuiTableBody"})(c)},1650:function(e,t,a){"use strict";var n=a(1),o=a(4),r=a(0),l=(a(3),a(2)),s=a(9),i=a(299),m={variant:"head"},c=r.forwardRef((function(e,t){var a=e.classes,s=e.className,c=e.component,u=void 0===c?"thead":c,p=Object(o.a)(e,["classes","className","component"]);return r.createElement(i.a.Provider,{value:m},r.createElement(u,Object(n.a)({className:Object(l.default)(a.root,s),ref:t,role:"thead"===u?null:"rowgroup"},p)))}));t.a=Object(s.a)({root:{display:"table-header-group"}},{name:"MuiTableHead"})(c)},2081:function(e,t,a){"use strict";a.r(t),t.default="import MomentUtils from '@date-io/moment';\nimport '@fake-db';\nimport FuseAuthorization from '@fuse/core/FuseAuthorization';\nimport FuseLayout from '@fuse/core/FuseLayout';\nimport FuseTheme from '@fuse/core/FuseTheme';\nimport history from '@history';\nimport { createGenerateClassName, jssPreset, StylesProvider } from '@material-ui/core/styles';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport { create } from 'jss';\nimport jssExtend from 'jss-plugin-extend';\nimport rtl from 'jss-rtl';\nimport React from 'react';\nimport Provider from 'react-redux/es/components/Provider';\nimport { Router } from 'react-router-dom';\nimport AppContext from './AppContext';\nimport { Auth } from './auth';\nimport routes from './fuse-configs/routesConfig';\nimport store from './store';\n\nconst jss = create({\n\t...jssPreset(),\n\tplugins: [...jssPreset().plugins, jssExtend(), rtl()],\n\tinsertionPoint: document.getElementById('jss-insertion-point')\n});\n\nconst generateClassName = createGenerateClassName();\n\nconst App = () => {\n\treturn (\n\t\t<AppContext.Provider\n\t\t\tvalue={{\n\t\t\t\troutes\n\t\t\t}}\n\t\t>\n\t\t\t<StylesProvider jss={jss} generateClassName={generateClassName}>\n\t\t\t\t<Provider store={store}>\n\t\t\t\t\t<MuiPickersUtilsProvider utils={MomentUtils}>\n\t\t\t\t\t\t<Auth>\n\t\t\t\t\t\t\t<Router history={history}>\n\t\t\t\t\t\t\t\t<FuseAuthorization>\n\t\t\t\t\t\t\t\t\t<FuseTheme>\n\t\t\t\t\t\t\t\t\t\t<FuseLayout history={history}/>\n\t\t\t\t\t\t\t\t\t</FuseTheme>\n\t\t\t\t\t\t\t\t</FuseAuthorization>\n\t\t\t\t\t\t\t</Router>\n\t\t\t\t\t\t</Auth>\n\t\t\t\t\t</MuiPickersUtilsProvider>\n\t\t\t\t</Provider>\n\t\t\t</StylesProvider>\n\t\t</AppContext.Provider>\n\t);\n};\n\nexport default App;\n"},2374:function(e,t,a){"use strict";a.r(t),t.default="import { authRoles } from 'app/auth';\nimport AdminRoleExample from './AdminRoleExample';\n\nconst AdminRoleExampleConfig = {\n\tsettings: {\n\t\tlayout: {\n\t\t\tconfig: {}\n\t\t}\n\t},\n\tauth: authRoles.admin, // ['admin']\n\troutes: [\n\t\t{\n\t\t\tpath: '/auth/admin-role-example',\n\t\t\tcomponent: AdminRoleExample\n\t\t}\n\t]\n};\n\nexport default AdminRoleExampleConfig;\n"},3245:function(e,t,a){"use strict";a.r(t);var n=a(149),o=a(210),r=a(1581),l=a(228),s=a(1647),i=a(1648),m=a(1591),c=a(1650),u=a(1592),p=a(229),f=a(0),d=a.n(f);t.default=function(){return d.a.createElement(o.a,{header:d.a.createElement("div",{className:"flex flex-1 items-center justify-between p-24"},d.a.createElement("div",{className:"flex flex-col"},d.a.createElement("div",{className:"flex items-center mb-16"},d.a.createElement(r.a,{className:"text-18",color:"action"},"home"),d.a.createElement(r.a,{className:"text-16",color:"action"},"chevron_right"),d.a.createElement(p.a,{color:"textSecondary"},"Documentation"),d.a.createElement(r.a,{className:"text-16",color:"action"},"chevron_right"),d.a.createElement(p.a,{color:"textSecondary"},"Fuse Components")),d.a.createElement(p.a,{variant:"h6"},"FuseAuthorization"))),content:d.a.createElement("div",{className:"p-24 max-w-2xl"},d.a.createElement(p.a,{className:"mb-16",component:"p"},d.a.createElement("code",null,"FuseAuthorization")," is the authorization component of the Fuse React. It restricts the unauthorized user access with looking ",d.a.createElement("b",null,"route configs")," and ",d.a.createElement("b",null,"user.role"),"."),d.a.createElement(p.a,{className:"mt-32 mb-8",variant:"h5"},"Setup"),d.a.createElement(p.a,{className:"mb-16",component:"p"},"The component should wraps the FuseTheme component."),d.a.createElement(p.a,{className:"inline-block mb-8 italic",component:"code"},"src/app/App.js"),d.a.createElement(n.a,{component:"pre",className:"language-jsx"},a(2081)),d.a.createElement(p.a,{className:"mt-32 mb-8",variant:"h5"},"Configuration"),d.a.createElement(p.a,{className:"mt-32 mb-8",variant:"h6"},"Route Configuration:"),d.a.createElement(p.a,{className:"mb-16",component:"p"},"You need to define authorization (auth) in the ",d.a.createElement("b",null,"route config files")," for to control the access via permission roles."),d.a.createElement(p.a,{className:"mt-32 mb-8",variant:"subtitle2"},"Example Usage:"),d.a.createElement(p.a,{className:"inline-block mb-8 italic",component:"code"},"src/app/main/auth/admin-role-example/AdminRoleExampleConfig.js"),d.a.createElement(n.a,{component:"pre",className:"language-jsx"},a(2374)),d.a.createElement(p.a,{className:"my-16",component:"p"},"You can also give different auth values for individual routes with writing auth value inside the route object."),d.a.createElement(l.a,{className:"max-w-md my-16"},d.a.createElement(s.a,null,d.a.createElement(c.a,null,d.a.createElement(u.a,null,d.a.createElement(m.a,{className:"font-bold text-14"},"Authorization Role (auth) options"),d.a.createElement(m.a,null))),d.a.createElement(i.a,null,d.a.createElement(u.a,null,d.a.createElement(m.a,null,d.a.createElement("code",null,"null")),d.a.createElement(m.a,null,"Do not check, allow everyone")),d.a.createElement(u.a,null,d.a.createElement(m.a,null,d.a.createElement("code",null,"[]")),d.a.createElement(m.a,null,"Only guest allowed")),d.a.createElement(u.a,null,d.a.createElement(m.a,null,d.a.createElement("code",null,"[admin,user]")),d.a.createElement(m.a,null,"Only 'admin' and 'user' roles are allowed"))))),d.a.createElement(p.a,{className:"mt-48 mb-8",variant:"h6"},"User.role Configuration:"),d.a.createElement(p.a,{className:"mb-16",component:"p"},"User ",d.a.createElement("b",null,"role")," and ",d.a.createElement("b",null,"data")," are stored at ",d.a.createElement("b",null,"auth.user")," in the redux store."),d.a.createElement(p.a,{className:"mb-16",component:"p"},"After successful login user.role will be updated and the FuseAuthorization automatically redirects the authorized user."),d.a.createElement(p.a,{className:"inline-block mb-8 italic",component:"code"},"src/app/auth/store/reducers/user.reducer.js (initial user state)"),d.a.createElement(n.a,{component:"pre",className:"language-js"},"  \n                              const initialState = {\n                                role: [],//guest\n                                data: {\n                                    'displayName': 'John Doe',\n                                    'photoURL'   : 'assets/images/avatars/Velazquez.jpg',\n                                    'email'      : 'johndoe@withinpixels.com',\n                                    shortcuts    : [\n                                        'calendar',\n                                        'mail',\n                                        'contacts',\n                                        'todo'\n                                    ]\n                                }\n                            };\n                         "),d.a.createElement(l.a,{className:"max-w-md my-16"},d.a.createElement(s.a,null,d.a.createElement(c.a,null,d.a.createElement(u.a,null,d.a.createElement(m.a,{className:"font-bold text-14"},"User Role options"),d.a.createElement(m.a,null))),d.a.createElement(i.a,null,d.a.createElement(u.a,null,d.a.createElement(m.a,null,d.a.createElement("code",null,"null")," or ",d.a.createElement("code",null,"undefined")," or ",d.a.createElement("code",null,"[]")),d.a.createElement(m.a,null,"Guest")),d.a.createElement(u.a,null,d.a.createElement(m.a,null,d.a.createElement("code",null,"['admin','user']")," (array)"),d.a.createElement(m.a,null,"User has roles 'admin' and 'user'")),d.a.createElement(u.a,null,d.a.createElement(m.a,null,d.a.createElement("code",null,'"admin"')," (string)"),d.a.createElement(m.a,null,"User has 'admin' role"))))),d.a.createElement(p.a,{className:"mt-48 mb-8",variant:"h6"},"Navigation Item Configuration:"),d.a.createElement(p.a,{className:"mb-16",component:"p"},"You can control the navigation ",d.a.createElement("b",null,"item/group/collapse")," visibility by adding ",d.a.createElement("b",null,"auth"),"property in ",d.a.createElement("code",null,"src/app/fuse-configs/NavigationConfig.js"),"."),d.a.createElement(p.a,{className:"mt-32 mb-8",variant:"subtitle2"},"Example Usage:"),d.a.createElement(n.a,{component:"pre",className:"language-js"},"\n                                  {\n                                    'id'   : 'only-admin-navigation-item',\n                                    'title': 'Nav item only for Admin',\n                                    'type' : 'item',\n                                    'auth' : authRoles.admin,//['admin']\n                                    'url'  : '/auth/admin-role-example',\n                                    'icon' : 'verified_user'\n                                  },\n                            "),d.a.createElement(p.a,{className:"mt-48 mb-4",variant:"h5"},"Making the whole app auth protected:"),d.a.createElement(p.a,{className:"mb-12",variant:"subtitle2"},"On routesConfig.js file"),d.a.createElement(p.a,{className:"mb-16",component:"p"},"If you don't want to set auth on every page config;",d.a.createElement("br",null),"You can give default auth role value in the ",d.a.createElement("code",null,"src/app/fuse-configs/routesConfig.js"),"file,",d.a.createElement("br",null),"Set defaultAuth paramater",d.a.createElement("code",null,"FuseUtils.generateRoutesFromConfigs(routeConfigs, ['admin','staff','user'])"),",",d.a.createElement("br",null),"The individual route configs which has auth option won't be overridden,",d.a.createElement("br",null),"With this configuration below, makes ",d.a.createElement("b",null,"whole app")," auth protected by default:"),d.a.createElement(n.a,{component:"pre",className:"language-js"},"\n                                import React from 'react';\n                                import {Redirect} from 'react-router-dom';\n                                import FuseUtils from '@fuse/utils';\n                                import {appsConfigs} from 'app/main/apps/appsConfigs';\n                                import {pagesConfigs} from 'app/main/pages/pagesConfigs';\n                                import {authRoleExamplesConfigs} from 'app/main/auth/authRoleExamplesConfigs';\n                                import {UserInterfaceConfig} from 'app/main/user-interface/UserInterfaceConfig';\n                                import {DocumentationConfig} from 'app/main/documentation/DocumentationConfig';\n                                import {LoginConfig} from 'app/main/login/LoginConfig';\n                                import {RegisterConfig} from 'app/main/register/RegisterConfig';\n                                import {LogoutConfig} from 'app/main/logout/LogoutConfig';\n                                import {CallbackConfig} from 'app/main/callback/CallbackConfig';\n                                \n                                const routeConfigs = [\n                                    ...appsConfigs,\n                                    ...pagesConfigs,\n                                    ...authRoleExamplesConfigs,\n                                    UserInterfaceConfig,\n                                    DocumentationConfig,\n                                    LogoutConfig,\n                                    LoginConfig,\n                                    RegisterConfig,\n                                    LogoutConfig,\n                                    CallbackConfig,\n                                ];\n                                \n                                const routes = [\n                                    ...FuseUtils.generateRoutesFromConfigs(routeConfigs, ['admin','staff','user']),\n                                    {\n                                        path     : '/',\n                                        exact    : true,\n                                        component: () => <Redirect to=\"/apps/dashboards/analytics\"/>\n                                    },\n                                    {\n                                        component: () => <Redirect to=\"/pages/errors/error-404\"/>\n                                    }\n                                ];\n                                \n                                export default routes;\n\n                            "),d.a.createElement(p.a,{className:"mt-48 mb-4",variant:"h5"},"Allow everyone(guest,user) for accessing root (/) page as a landing page"),d.a.createElement(p.a,{className:"mb-16",component:"p"},"After configuring to make whole app protected as above, we need to set ",d.a.createElement("code",null,"auth:null")," at the route: ",d.a.createElement("code",null,"/")," for to make it accesible for everyone.",d.a.createElement("br",null),"If you redirect main route (/), also make sure to set the redirected route config",d.a.createElement("code",null,"auth:null"),"."),d.a.createElement(n.a,{component:"pre",className:"language-js"},"\n                                import React from 'react';\n                                import {Redirect} from 'react-router-dom';\n                                import FuseUtils from '@fuse/utils';\n                                import {appsConfigs} from 'app/main/apps/appsConfigs';\n                                import {pagesConfigs} from 'app/main/pages/pagesConfigs';\n                                import {authRoleExamplesConfigs} from 'app/main/auth/authRoleExamplesConfigs';\n                                import {UserInterfaceConfig} from 'app/main/user-interface/UserInterfaceConfig';\n                                import {DocumentationConfig} from 'app/main/documentation/DocumentationConfig';\n                                import {LoginConfig} from 'app/main/login/LoginConfig';\n                                import {RegisterConfig} from 'app/main/register/RegisterConfig';\n                                import {LogoutConfig} from 'app/main/logout/LogoutConfig';\n                                import {CallbackConfig} from 'app/main/callback/CallbackConfig';\n                                \n                                const routeConfigs = [\n                                    ...appsConfigs,\n                                    ...pagesConfigs,\n                                    ...authRoleExamplesConfigs,\n                                    UserInterfaceConfig,\n                                    DocumentationConfig,\n                                    LogoutConfig,\n                                    LoginConfig,\n                                    RegisterConfig,\n                                    LogoutConfig,\n                                    CallbackConfig\n                                ];\n                                \n                                const routes = [\n                                    //if you want to make whole app auth protected by default change defaultAuth for example:\n                                    // ...FuseUtils.generateRoutesFromConfigs(routeConfigs, ['admin','staff','user']),\n                                    // The individual route configs which has auth option won't be overridden.\n                                    ...FuseUtils.generateRoutesFromConfigs(routeConfigs, ['admin', 'staff', 'user']),\n                                    {\n                                        path     : '/',\n                                        exact    : true,\n                                        auth     : null,\n                                        component: LandingPage\n                                    },\n                                    {\n                                        component: () => <Redirect to=\"/pages/errors/error-404\"/>\n                                    }\n                                ];\n                                \n                                export default routes;\n\n\n                            "),d.a.createElement(p.a,{className:"mt-48 mb-4",variant:"h5"},"Redirect the logged-in user to a specific route depending on his role"),d.a.createElement(p.a,{className:"mb-16",component:"p"},"Before dispatching ",d.a.createElement("b",null,"SET_USER_DATA")," action you can set redirectUrl on"),d.a.createElement(p.a,{className:"inline-block mb-8 italic",component:"code"},"src/app/auth/store/actions/user.actions.js"),d.a.createElement(n.a,{component:"pre",className:"language-js"},"\n                            /**\n                             * Set User Data\n                             */\n                            export function setUserData(user)\n                            {\n                                return (dispatch) => {\n                            \n                                    /*\n                                    You can redirect the logged-in user to a specific route depending on his role\n                                     */\n                            \n                                    history.location.state = {\n                                        redirectUrl: user.redirectUrl // for example 'apps/academy'\n                                    }\n                            \n                                    /*\n                                    Set User Settings\n                                     */\n                                    dispatch(setDefaultSettings(user.data.settings));\n                            \n                                    /*\n                                    Set User Data\n                                     */\n                                    dispatch({\n                                        type   : SET_USER_DATA,\n                                        payload: user\n                                    })\n                                }\n                            }\n                        "))})}}}]);